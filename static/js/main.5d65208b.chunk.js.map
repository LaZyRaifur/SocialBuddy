{"version":3,"sources":["Component/Comment/Comment.js","Component/Post/Post.js","Component/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Comment","name","email","className","Post","props","data","title","body","cEmail","cName","Home","useState","post","setPost","comment","setComment","info","setInfo","useEffect","fetch","then","res","json","temp","forEach","x","y","id","cBody","push","merge","console","log","map","each","Key","App","path","exac","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAceA,EAXC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACI,sBAAKC,UAAU,UAAf,UACK,4BAAID,IAEH,4BAAG,gCAAQD,UCQVG,G,MAZF,SAACC,GAAW,IAAD,EAEcA,EAAMC,KAAjCC,EAFa,EAEbA,MAAMC,EAFO,EAEPA,KAAKC,EAFE,EAEFA,OAAOC,EAFL,EAEKA,MACzB,OACI,sBAAKP,UAAU,aAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBI,IACtB,4BAAIC,IACJ,cAAC,EAAD,CAASN,MAAOO,EAAQR,KAAMS,SCmD3BC,G,MAzDF,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACRC,EADQ,KACHC,EADG,OAEcF,mBAAS,IAFvB,mBAERG,EAFQ,KAEAC,EAFA,OAGQJ,mBAAS,IAHjB,mBAGRK,EAHQ,KAGHC,EAHG,KAOfC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAf,GAAI,OAAEQ,EAAQR,QAEtB,IAEFa,qBAAU,WACNC,MAAM,iDACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAf,GAAI,OAAEU,EAAWV,QACzB,IAyBF,OANJa,qBAAU,WACND,EAhBc,SAACL,EAAKE,GAChB,IAAMS,EAAO,GAWb,OAVAX,EAAKY,SAAQ,SAACC,GACVX,EAAQU,SAAQ,SAACE,GACb,GAAID,EAAEE,KAAOD,EAAEC,GAAG,CACd,IAAIlB,EAAQiB,EAAE1B,KACVQ,EAASkB,EAAEzB,MACX2B,EAAQF,EAAEnB,KACdgB,EAAKM,KAAL,2BAAcJ,GAAd,IAAgBhB,QAAMD,SAAOoB,kBAIlCL,EAIHO,CAAMlB,EAAKE,IACnBiB,QAAQC,IAAIhB,KACd,CAACJ,EAAKE,IAIA,8BAKOE,EAAKiB,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,CAAMC,IAAKD,EAAKP,GAAItB,KAAM6B,W,eC3B5CE,MAjBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAAC,EAAD,MAIF,cAAC,IAAD,CAAOC,MAAI,EAACD,KAAK,IAAjB,SACE,cAAC,EAAD,YCRKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d65208b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Comment.css';\r\n\r\nconst Comment = ({name,email}) => {\r\n    return (\r\n        <div className=\"comment\">\r\n             <p>{email}</p>\r\n             \r\n              <p><small>{name}</small></p>\r\n             \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React from 'react';\r\nimport Comment from '../Comment/Comment';\r\nimport './Post.css';\r\n\r\nconst Post = (props) => {\r\n    \r\n    const {title,body,cEmail,cName} = props.data;\r\n    return (\r\n        <div className=\"body-style\">\r\n            <h1 className=\"name\">{title}</h1>\r\n            <p>{body}</p>\r\n            <Comment email={cEmail} name={cName}></Comment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport Post from '../Post/Post';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [post,setPost] = useState([]);\r\n    const [comment,setComment] = useState([]);\r\n    const [info,setInfo] = useState([]);\r\n\r\n\r\n   \r\n    useEffect(()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res=>res.json())\r\n        .then(data=>setPost(data))\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/comments')\r\n        .then(res=>res.json())\r\n        .then(data=>setComment(data))\r\n    },[])\r\n    \r\n\r\n    // Function to combine post and comment base in ID\r\n    const merge = (post,comment)=>{\r\n        const temp = [];\r\n        post.forEach((x)=>{\r\n            comment.forEach((y)=>{\r\n                if (x.id === y.id){\r\n                    let cName = y.name;\r\n                    let cEmail = y.email;\r\n                    let cBody = y.body;\r\n                    temp.push({...x,cName,cEmail,cBody});\r\n                }\r\n            });\r\n        });\r\n        return temp;\r\n    };\r\n\r\nuseEffect(()=>{\r\n    setInfo(merge(post,comment));\r\n    console.log(info);\r\n},[post,comment]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            \r\n            \r\n            {\r\n               info.map((each)=> <Post Key={each.id} data={each}></Post>)\r\n                \r\n            }\r\n             \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","\nimport './App.css';\nimport Home from './Component/Home/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/home\">\n          <Home></Home>\n\n\n        </Route>\n        <Route exac path=\"/\">\n          <Home/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}